-- Create about_content table if not exists
CREATE TABLE IF NOT EXISTS public.about_content (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  title text NOT NULL,
  content text NOT NULL,
  images text[] DEFAULT '{}'::text[],
  active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  created_by uuid REFERENCES auth.users(id)
);

-- Enable RLS
ALTER TABLE public.about_content ENABLE ROW LEVEL SECURITY;

-- Create storage bucket
-- Create storage bucket if not exists
INSERT INTO storage.buckets (id, name, public)
VALUES ('about_images', 'about_images', true)
ON CONFLICT (id) DO NOTHING;

-- Create storage policies
CREATE POLICY "Admin access to about_images"
ON storage.objects
FOR ALL
TO authenticated
USING (
  EXISTS (
    SELECT 1
    FROM profiles
    WHERE profiles.id = auth.uid()
    AND profiles.role = 'admin'
  )
);

-- Create admin access policy for about_content
CREATE POLICY "Admin access to about_content"
ON public.about_content
FOR ALL
USING (
  EXISTS (
    SELECT 1
    FROM profiles
    WHERE profiles.id = auth.uid()
    AND profiles.role = 'admin'
  )
)
WITH CHECK (
  EXISTS (
    SELECT 1
    FROM profiles
    WHERE profiles.id = auth.uid()
    AND profiles.role = 'admin'
  )
);
